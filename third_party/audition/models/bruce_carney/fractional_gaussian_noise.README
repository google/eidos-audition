1. Fast (exact) fractional Gaussian noise and Brownian motion generator from Scott Jackson:
===========================================================================================
The original Matlab code can be found here:
  https://www.mathworks.com/matlabcentral/mlc-downloads/downloads/submissions/29686/versions/1/previews/ffGn.m/index.html

Our implementation corresponds to version 1.2 above. The documentation for
more recent versions (that include AN tuning) is provided below.

function y = ffGn(N, tdres, Hinput, noiseType, mu, sigma)
% FFGN  Fast (exact) fractional Gaussian noise and Brownian motion generator.
%       Y = FFGN(N, tdres, Hinput, noiseType, MU, SIGMA) returns a vector containing a sequence of fractional Gaussian
%       noise or fractional Brownian motion.  The generation process uses an FFT which makes it
%       very fast.  The input arguments are:
%
%               N                       is the length of the output sequence.
%       tdres       is the time resolution (1/sampling rate)
%               H                       is the "Hurst" index of the resultant noise (0 < H <= 2).  For 0 < H <= 1,
%                                         the output will be fractional Gaussian noise with Hurst index H.  For
%                                         1 < H <= 2, the output will be fractional Brownian motion with Hurst
%                                         index H-1.  Either way, the power spectral density of the output will
%                                         be nominally proportional to 1/f^(2H-1).
%               noiseType       is 0 for fixed fGn noise and 1 for variable fGn
%               mu                      is the mean of the noise. [default = 0]
%               sigma           is the standard deviation of the noise. [default = 1]
%
% % %   FFGN(N, tdres, H) returns a sequence of fractional Gaussian noise with a mean of zero
% % %   and a standard deviation of one or fractional Brownian motion derived from such
% % %   fractional Gaussian noise.
%
%       References: Davies & Harte (1987); Beran (1994); Bardet et al., 2002
%       This method is based on an embedding of the covariance matrix in a circulant matrix.
%
%   Copyright ï¿½ 2003-2005 by B. Scott Jackson
%   History:
%   Revision: 1.4    Date: November 27, 2012 by M. S. A. Zilany : noiseType
%                       has been added
%   Revision: 1.3    Date: Aug 28, 2008 by M. S. A. Zilany
%                    Sigma is deifined for diff. sponts (mu) and Resampling has been introduced to be compatible with the AN model
%   Revision: 1.2    Date: March 14, 2005
%       Rev. 1.2 - 3/14/05 - Added some additional documentation and input argument checking.
%       Rev. 1.1 - 9/15/04 - Added the persistent variables and associated "if"-statement.
%       Rev. 1.0 - 2/11/03 - Original version.
